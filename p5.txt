Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
	954
* ¿Cuánto tiempo dura la captura?
	56'15 segundos
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
	IP: 192.168.1.34
	Se trata de una IP privada.
    Sabemos que es la máquina donde se ha efectuado la captura porque es la única que aparece siempre.

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
	Es mayor UDP.
	Sí, si tiene sentido.
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?
	SIP, RTP, RTCP, HTTP, ICMP, ARP.
	Son señal SIP, RTP y RTCP. El resto son ruido.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
	En los segundos 7, 14, 16, 38, 39 y 55.
* Y los paquetes con RTP, ¿cuándo se envı́an?
	En los segundos 18, 21, 25, 29, 33, 35 y 36.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
	DNS
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
	80.58.61.250	
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
	86.64.162.35

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo?
	http://ekiga.net/ip/
* ¿Qué user agent (UA) la está pidiendo?
	192.168.1.34
* ¿Qué devuelve el servidor?
	Un mensajes de confirmación 200 OK
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?
	Recibimos un IP diferente.
	Está respondiendo con otra IP porque la captura está hecha a través de una IP privada.

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
	Para que los clientes NAT puedan saber su dirección IP pública, el tipo de NAT y el puerto de internet asociado al que están siendo sometidos.
* ¿Podrı́as decir si estamos tras un NAT o no?
	Sí, porque estamos usando el protocolo STUN.
	

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
	86.64.162.35
* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
	5060
* ¿Qué método SIP utiliza el UA para registrarse?
	REGISTER.
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
	INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, MESSAGE.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
	No.
* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
	Si la respuesta es un mensaje 4xx no se habrá registrado, sabremos que el registro es correcto cuando recibamos 200 OK.
* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
	Se diferencia en que en el segundo intento encontramos el campo Authorization.
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
	3600 segundos.	

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
	Sí, Gregorio Robles, sip: grex@ekiga.net
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
	Los datos del INVITE de la llamada.
	En SIP/SDP.
* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
	No, porque el siguiente mensaje es 407 Proxy Authentication Required.
* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
	En que en el segundo se añade el campo Proxy-Authorization con los requisitos necesarios que en el primer intento no fueron enviados.


11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
	Los protocolos RTP y H.261
	RTP es el protocolo básico de transporte de tráfico multimedia en Internet, que se encapsula sobre UDP y se encarga de enviar tramas de 	aplicaciones de tiempo real, sin añadir fiabilidad ni ningún tipo de QoS.
	H.261 es un algoritmo de codificación que genera tramas que son enviadas por el protocolo RTP.
* ¿Cuál es el tamaño de paquete de los mismos?
	RTP = 214
	H.261 = no tiene un tamaño fijo.
* ¿Se utilizan bits de padding?
	No, ya que el campo padding está a cero (o False).
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
	Cada 20 ms.
* ¿Cuántos bits/segundo se envı́an?
	38 paquetes/seg * 214 bytes/paquete = 8132

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
	Hay dos flujos, porque aunque las direcciones sean las mismas se comunican por puertos distintos.
* ¿Cuántos paquetes se pierden?
	No se pierde ningún paquete.
* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
	Flujo 1: max delta = 1290.444 ms
	Flujo 2: max delta = 1290.479 ms
	Es el tiempo que tarda en llegar un paquete respecto al anterior paquete.
* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
	Flujo 1: max jitter = 119.635 ms, mean jitter = 42.500 ms
	Flujo 2: max jitter = 183.096 ms, mean jitter = 153.240 ms
	El jitter es la variabilidad del tiempo entre paquetes.
	Estamos ante una conversación de calidad, aunque podría ser mejor si los valores fuesen menores a 100 ms.
13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
	Su valor es cero.
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
	No, solo podremos saber si es el primer paquete que nos ha llegado.
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
	El paquete 247
* ¿A qué se debe el cambio tan brusco del jitter?
	A que se ha reducido el ancho de banda.
* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
	Sí, si es comparable.
	Es más grande el valor del delta.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación?
	20.9 segundos.
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
	Flujo 1: 0xbf4afd37
	Flujo 2: 0x43306582
	Porque hay dos flujos que se comunican por distintos puertos.
	No hay CSRCs.
15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
	BYE.
* ¿En qué trama(s)?
	924, 925, 927 Y 933.
* ¿Por qué crees que se envı́a varias veces?
	Porque no recibe el mensaje de respuesta 200 OK.

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
	Para poner el valor de expires a cero y así eliminar ese usuario.
* ¿En qué trama sucede esto?
	En la trama 952.
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
	En que el expires ahora su valor es 0 y en la primera su valor era 3600.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirígete a la web de IPTel 3 con el navegador y créate una cuenta SIP. 
Recibirás un correo electrónico de confirmación en la dirección que has indicado al registrarte.
	Hecho.

18. Lanza Ekiga, y configúralo con los datos de la cuenta que te acabas de crear. Para ello, puedes ir al menú “Editar” y seleccionar “Cuentas”. Tendrás que rellenar los campos de manera similar a lo que se puede ver en la imagen a continuación (recuerda poner tu nombre de usuario en lugar de “grex”). Comprueba que estás conectado (En la barra al final de la ventana podrás ver “Connected”). Al terminar, cierra completamente Ekiga.
	Hecho.

19. Captura una sesión SIP de una conversación con el número SIP sip:music@sip.iptel.org.
Recuerda que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso.
	Hecho.

20. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
* ¿Se utilizan DNS y STUN? ¿Por qué?
	Sí, porque estamos tras un NAT.
* ¿Son diferentes el registro y la descripción de la sesión?
	Sí, ahora en el mensaje cabecera tenemos un campo 'f' en el que aparece el 	usuario de iptel, un campo 't' en el que aparecen los datos de music@sip.iptel.org y un campo 'm' con el contacto URI que en este caso es nuestra cuenta de laboratorio y su ip.

21. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
	Tenemos dos flujos, entre dos direcciones y que se comunican únicamente en dos puertos(25662 y 5090 en este caso).
* ¿Cuál es su periodicidad?
	20 ms.
* ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
	Flujo 1(el que llega a la cuenta del lab):
		-Max Delta: 36.737 ms
		-Max Jitter: 2.073 ms
		-Mean Jitter: 0.285 ms
	Flujo 2 (el que sale desde la cuenta del lab):
		-Max Delta: 191.119 ms
		-Max Jitter: 43.199 ms
		-Mean Jitter: 35.330 ms
* ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
	Sí.
	Telephony -> VoIP Calls -> Play Stream.
	
* ¿Sabrías decir qué tipo de servicio ofrece sip:music@iptel.org?
	Servicio musical.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

22. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

